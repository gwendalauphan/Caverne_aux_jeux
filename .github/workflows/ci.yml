name: CI

on:
  push:
    branches: [main]
  pull_request:
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run main.py (test run)
        run: |
          python app/main.py --help || true  # Replace with a real test if available

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker image
        run: docker build -t caverne-aux-jeux .
      - name: Run Docker container (test)
        run: docker run --rm caverne-aux-jeux --help || true  # Replace with a real test if available

  build-linux:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt
      - name: Build executable (Linux)
        run: |
          pyinstaller --onefile --add-data 'app/Data/*:Data/' --add-data 'app/Fantome/Ressources/Images/*:Fantome/Ressources/Images/' --add-data 'app/Flappy_Bird/Ressources/*:Flappy_Bird/Ressources/' --add-data 'app/Minesweeper/Images/*:Minesweeper/Images/' --add-data 'app/Parametters/*:Parametters/' --add-data 'app/Pendu/ressources/*:Pendu/ressources/' --add-data 'app/Pong/res/*:Pong/res/' --add-data 'app/Snake/images/*:Snake/images/' --add-data 'app/Tete_chercheuse/image/*:Tete_chercheuse/image/' --add-data 'app/Tetris/Images/*:Tetris/Images/' --add-data 'app/thumbnail/*:thumbnail/'  --hidden-import='PIL._tkinter_finder' --windowed --noconsole app/main.py
      - name: Upload Linux executable
        uses: actions/upload-artifact@v3
        with:
          name: caverne-aux-jeux-linux
          path: dist/main

  build-windows:
    if: github.ref == 'refs/heads/main'
    runs-on: windows-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt
      - name: Build executable (Windows)
        run: |
          pyinstaller --onefile --add-data "app/Data/*;Data/" --add-data "app/Fantome/Ressources/Images/*;Fantome/Ressources/Images/" --add-data "app/Flappy_Bird/Ressources/*;Flappy_Bird/Ressources/" --add-data "app/Minesweeper/Images/*;Minesweeper/Images/" --add-data "app/Parametters/*;Parametters/" --add-data "app/Pendu/ressources/*;Pendu/ressources/" --add-data "app/Pong/res/*;Pong/res/" --add-data "app/Snake/images/*;Snake/images/" --add-data "app/Tete_chercheuse/image/*;Tete_chercheuse/image/" --add-data "app/Tetris/Images/*;Tetris/Images/" --add-data "app/thumbnail/*;thumbnail/"  --hidden-import="PIL._tkinter_finder" --windowed --noconsole app/main.py
      - name: Upload Windows executable
        uses: actions/upload-artifact@v3
        with:
          name: caverne-aux-jeux-windows
          path: dist/main.exe

  release-artifacts:
    if: github.event_name == 'release'
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: caverne-aux-jeux-linux
          path: ./linux
      - uses: actions/download-artifact@v3
        with:
          name: caverne-aux-jeux-windows
          path: ./windows
      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./linux/main
            ./windows/main.exe
