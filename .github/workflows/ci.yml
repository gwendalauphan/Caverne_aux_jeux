name: CI

on:
  push:
    branches: [main]
  pull_request:
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Install xvfb
        run: sudo apt update && sudo apt install -y xvfb
      - name: Run main.py (test run)
        run: |
          if timeout 5s stdbuf -oL xvfb-run -a python app/main.py 2>&1 | grep -q "The client app is running"; then
            echo "Client output OK"
          else
            echo "Client output missing"
            exit 1
          fi
          if timeout 5s stdbuf -oL python app/Reseau/server.py 2>&1 | grep -q "Server is listening on port 8000"; then
            echo "Server output OK"
          else
            echo "Server output missing"
            exit 1
          fi

  build-linux:
    if: github.event_name == 'pull_request'
    runs-on: alpine-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        run: docker build -t caverne-aux-jeux -f docker/Dockerfile .
      - name: Build executables (Linux)
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace caverne-aux-jeux \
            /bin/sh -c "cd / && make build-linux"
      - name: Upload Linux executables
        uses: actions/upload-artifact@v4
        with:
          name: caverne-aux-jeux-linux
          path: |
            dist/main
            dist/server

  build-windows:
    if: github.event_name == 'pull_request'
    runs-on: alpine-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - name: Build executables (Windows)
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace caverne-aux-jeux \
            /bin/sh -c "cd / && make build-windows"
      - name: Upload Windows executables
        uses: actions/upload-artifact@v4
        with:
          name: caverne-aux-jeux-windows
          path: |
            dist/main.exe
            dist/server.exe

  test-exec-linux:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: [build-linux]
    steps:
      - uses: actions/checkout@v3
      - name: Download Linux executables
        uses: actions/download-artifact@v4
        with:
          name: caverne-aux-jeux-linux
          path: dist
      - name: Make executables runnable
        run: chmod +x dist/main dist/server
      - name: Install xvfb
        run: sudo apt update && sudo apt install -y xvfb
      - name: Test Linux client executable
        run: |
          if timeout 5s stdbuf -oL xvfb-run -a ./dist/main  2>&1 | grep -q "The client app is running"; then
            echo "Client output OK"
          else
            echo "Client output missing"
            exit 1
          fi
      - name: Test Linux server executable
        run: |
          if timeout 5s stdbuf -oL ./dist/server  2>&1 | grep -q "Server is listening on port 8000"; then
            echo "Server output OK"
          else
            echo "Server output missing"
            exit 1
          fi

  test-exec-windows:
    if: github.event_name == 'pull_request'
    runs-on: windows-latest
    needs: [build-windows]
    steps:
      - uses: actions/checkout@v3
      - name: Download Windows executables
        uses: actions/download-artifact@v4
        with:
          name: caverne-aux-jeux-windows
          path: dist
      - name: Test Windows client executable
        run: |
          ./dist/main.exe | findstr /C:"The client app is running"
      - name: Test Windows server executable
        run: |
          ./dist/server.exe | findstr /C:"Server is listening on port 8000"

  release-artifacts:
    if: github.event_name == 'release'
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: caverne-aux-jeux-linux
          path: ./linux
      - uses: actions/download-artifact@v4
        with:
          name: caverne-aux-jeux-windows
          path: ./windows
      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./dist/main
            ./dist/server
            ./dist/main.exe
            ./dist/server.exe
